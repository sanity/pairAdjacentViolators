<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>compute</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)Ljava/util/ArrayList;</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/spline/FritschCarlsonTangentStrategy::compute to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>ensureInputDataPointsAreStrictlyMonotone$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(ILjava/util/ArrayList;Ljava/util/ArrayList;)V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>ensureInputDataPointsAreStrictlyMonotone$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(ILjava/util/ArrayList;Ljava/util/ArrayList;)V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>27</index><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>ensureInputDataPointsAreStrictlyMonotone$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(ILjava/util/ArrayList;Ljava/util/ArrayList;)V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>ensureInputDataPointsAreStrictlyMonotone$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(ILjava/util/ArrayList;Ljava/util/ArrayList;)V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>ensureTangentsMeetConstraints$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(ILjava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>ensureTangentsMeetConstraints$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(ILjava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>ensureTangentsMeetConstraints$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(ILjava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>ensureTangentsMeetConstraints$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(ILjava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>ensureTangentsMeetConstraints$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(ILjava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>ensureTangentsMeetConstraints$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(ILjava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>ensureTangentsMeetConstraints$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(ILjava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>77</index><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>ensureTangentsMeetConstraints$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(ILjava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>ensureTangentsMeetConstraints$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(ILjava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>initTangentsToSecantAverages$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)Ljava/util/ArrayList;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><killingTest>com.github.sanity.pav.spline.FritschCarlsonTangentStrategySpec.com.github.sanity.pav.spline.FritschCarlsonTangentStrategySpec</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>initTangentsToSecantAverages$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)Ljava/util/ArrayList;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><killingTest>com.github.sanity.pav.spline.FritschCarlsonTangentStrategySpec.com.github.sanity.pav.spline.FritschCarlsonTangentStrategySpec</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>initTangentsToSecantAverages$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)Ljava/util/ArrayList;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><killingTest>com.github.sanity.pav.spline.FritschCarlsonTangentStrategySpec.com.github.sanity.pav.spline.FritschCarlsonTangentStrategySpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>initTangentsToSecantAverages$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)Ljava/util/ArrayList;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><killingTest>com.github.sanity.pav.spline.FritschCarlsonTangentStrategySpec.com.github.sanity.pav.spline.FritschCarlsonTangentStrategySpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>initTangentsToSecantAverages$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)Ljava/util/ArrayList;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><killingTest>com.github.sanity.pav.spline.FritschCarlsonTangentStrategySpec.com.github.sanity.pav.spline.FritschCarlsonTangentStrategySpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>initTangentsToSecantAverages$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)Ljava/util/ArrayList;</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><killingTest>com.github.sanity.pav.spline.FritschCarlsonTangentStrategySpec.com.github.sanity.pav.spline.FritschCarlsonTangentStrategySpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>initTangentsToSecantAverages$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)Ljava/util/ArrayList;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><killingTest>com.github.sanity.pav.spline.FritschCarlsonTangentStrategySpec.com.github.sanity.pav.spline.FritschCarlsonTangentStrategySpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>initTangentsToSecantAverages$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)Ljava/util/ArrayList;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>116</index><killingTest>com.github.sanity.pav.spline.FritschCarlsonTangentStrategySpec.com.github.sanity.pav.spline.FritschCarlsonTangentStrategySpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/spline/FritschCarlsonTangentStrategy::initTangentsToSecantAverages$pair_adjacent_violators_compileKotlin to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>initTangentsToSecantAverages$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)Ljava/util/ArrayList;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>82</index><killingTest/><description>removed call to kotlin/jvm/internal/Intrinsics::throwNpe</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>setTangentsTo0WhenTwoSuccessiveYValuesAreTheSame$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Ljava/util/ArrayList;)Ljava/util/Set;</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>setTangentsTo0WhenTwoSuccessiveYValuesAreTheSame$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Ljava/util/ArrayList;)Ljava/util/Set;</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>81</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>setTangentsTo0WhenTwoSuccessiveYValuesAreTheSame$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Ljava/util/ArrayList;)Ljava/util/Set;</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>setTangentsTo0WhenTwoSuccessiveYValuesAreTheSame$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Ljava/util/ArrayList;)Ljava/util/Set;</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>setTangentsTo0WhenTwoSuccessiveYValuesAreTheSame$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Ljava/util/ArrayList;)Ljava/util/Set;</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>setTangentsTo0WhenTwoSuccessiveYValuesAreTheSame$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Ljava/util/ArrayList;)Ljava/util/Set;</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>setTangentsTo0WhenTwoSuccessiveYValuesAreTheSame$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Ljava/util/ArrayList;)Ljava/util/Set;</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>setTangentsTo0WhenTwoSuccessiveYValuesAreTheSame$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Ljava/util/ArrayList;)Ljava/util/Set;</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>setTangentsTo0WhenTwoSuccessiveYValuesAreTheSame$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Ljava/util/ArrayList;)Ljava/util/Set;</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>setTangentsTo0WhenTwoSuccessiveYValuesAreTheSame$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Ljava/util/ArrayList;)Ljava/util/Set;</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>89</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/spline/FritschCarlsonTangentStrategy::setTangentsTo0WhenTwoSuccessiveYValuesAreTheSame$pair_adjacent_violators_compileKotlin to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>updateTangentsToEnsureMonotonicity$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>289</index><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>updateTangentsToEnsureMonotonicity$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>356</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>updateTangentsToEnsureMonotonicity$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>400</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>updateTangentsToEnsureMonotonicity$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>285</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>updateTangentsToEnsureMonotonicity$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>311</index><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>updateTangentsToEnsureMonotonicity$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>321</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>updateTangentsToEnsureMonotonicity$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>330</index><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>updateTangentsToEnsureMonotonicity$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>updateTangentsToEnsureMonotonicity$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>96</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>updateTangentsToEnsureMonotonicity$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>157</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>updateTangentsToEnsureMonotonicity$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>220</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>updateTangentsToEnsureMonotonicity$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>289</index><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>updateTangentsToEnsureMonotonicity$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>297</index><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>updateTangentsToEnsureMonotonicity$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>355</index><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>updateTangentsToEnsureMonotonicity$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>392</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>updateTangentsToEnsureMonotonicity$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>436</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/spline/FritschCarlsonTangentStrategy::updateTangentsToEnsureMonotonicity$pair_adjacent_violators_compileKotlin to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>updateTangentsToEnsureMonotonicity$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>340</index><killingTest/><description>removed call to com/github/sanity/pav/spline/FritschCarlsonTangentStrategy::ensureInputDataPointsAreStrictlyMonotone$pair_adjacent_violators_compileKotlin</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>FritschCarlsonTangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.FritschCarlsonTangentStrategy</mutatedClass><mutatedMethod>updateTangentsToEnsureMonotonicity$pair_adjacent_violators_compileKotlin</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>349</index><killingTest/><description>removed call to com/github/sanity/pav/spline/FritschCarlsonTangentStrategy::ensureTangentsMeetConstraints$pair_adjacent_violators_compileKotlin</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>getM1</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest/><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/spline/CubicHermiteSpline::getM1</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>getM2</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest/><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/spline/CubicHermiteSpline::getM2</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>getX1</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest/><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/spline/CubicHermiteSpline::getX1</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>getX2</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest/><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/spline/CubicHermiteSpline::getX2</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>getY1</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest/><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/spline/CubicHermiteSpline::getY1</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>getY2</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest/><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/spline/CubicHermiteSpline::getY2</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>h00</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>h00</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>h00</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>h00</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>h00</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/spline/CubicHermiteSpline::h00</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>h01</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>h01</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>h01</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>h01</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/spline/CubicHermiteSpline::h01</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>h10</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>h10</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>h10</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>h10</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/spline/CubicHermiteSpline::h10</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>h11</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>h11</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/spline/CubicHermiteSpline::h11</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>80</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>84</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>88</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>89</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/spline/CubicHermiteSpline::interpolate</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>CubicHermiteSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.CubicHermiteSpline</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(DI)D</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><killingTest>com.github.sanity.pav.spline.CubicHermiteSplineSpec.com.github.sanity.pav.spline.CubicHermiteSplineSpec</killingTest><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/spline/CubicHermiteSpline::pow</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>SecantsCalculator.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.SecantsCalculator$Companion</mutatedClass><mutatedMethod>calculate</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><killingTest>com.github.sanity.pav.spline.SecantsCalculatorSpec.com.github.sanity.pav.spline.SecantsCalculatorSpec</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>SecantsCalculator.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.SecantsCalculator$Companion</mutatedClass><mutatedMethod>calculate</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>83</index><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>SecantsCalculator.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.SecantsCalculator$Companion</mutatedClass><mutatedMethod>calculate</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>99</index><killingTest>com.github.sanity.pav.spline.SecantsCalculatorSpec.com.github.sanity.pav.spline.SecantsCalculatorSpec</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>SecantsCalculator.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.SecantsCalculator$Companion</mutatedClass><mutatedMethod>calculate</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>116</index><killingTest>com.github.sanity.pav.spline.SecantsCalculatorSpec.com.github.sanity.pav.spline.SecantsCalculatorSpec</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>SecantsCalculator.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.SecantsCalculator$Companion</mutatedClass><mutatedMethod>calculate</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>60</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>SecantsCalculator.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.SecantsCalculator$Companion</mutatedClass><mutatedMethod>calculate</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>138</index><killingTest>com.github.sanity.pav.spline.SecantsCalculatorSpec.com.github.sanity.pav.spline.SecantsCalculatorSpec</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>SecantsCalculator.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.SecantsCalculator$Companion</mutatedClass><mutatedMethod>calculate</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>SecantsCalculator.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.SecantsCalculator$Companion</mutatedClass><mutatedMethod>calculate</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><killingTest>com.github.sanity.pav.spline.SecantsCalculatorSpec.com.github.sanity.pav.spline.SecantsCalculatorSpec</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>SecantsCalculator.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.SecantsCalculator$Companion</mutatedClass><mutatedMethod>calculate</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><killingTest>com.github.sanity.pav.spline.SecantsCalculatorSpec.com.github.sanity.pav.spline.SecantsCalculatorSpec</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>SecantsCalculator.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.SecantsCalculator$Companion</mutatedClass><mutatedMethod>calculate</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><killingTest>com.github.sanity.pav.spline.SecantsCalculatorSpec.com.github.sanity.pav.spline.SecantsCalculatorSpec</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>SecantsCalculator.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.SecantsCalculator$Companion</mutatedClass><mutatedMethod>calculate</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>103</index><killingTest>com.github.sanity.pav.spline.SecantsCalculatorSpec.com.github.sanity.pav.spline.SecantsCalculatorSpec</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>SecantsCalculator.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.SecantsCalculator$Companion</mutatedClass><mutatedMethod>calculate</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><killingTest>com.github.sanity.pav.spline.SecantsCalculatorSpec.com.github.sanity.pav.spline.SecantsCalculatorSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>SecantsCalculator.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.SecantsCalculator$Companion</mutatedClass><mutatedMethod>calculate</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><killingTest>com.github.sanity.pav.spline.SecantsCalculatorSpec.com.github.sanity.pav.spline.SecantsCalculatorSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>SecantsCalculator.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.SecantsCalculator$Companion</mutatedClass><mutatedMethod>calculate</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><killingTest>com.github.sanity.pav.spline.SecantsCalculatorSpec.com.github.sanity.pav.spline.SecantsCalculatorSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>SecantsCalculator.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.SecantsCalculator$Companion</mutatedClass><mutatedMethod>calculate</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><killingTest>com.github.sanity.pav.spline.SecantsCalculatorSpec.com.github.sanity.pav.spline.SecantsCalculatorSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>SecantsCalculator.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.SecantsCalculator$Companion</mutatedClass><mutatedMethod>calculate</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>116</index><killingTest>com.github.sanity.pav.spline.SecantsCalculatorSpec.com.github.sanity.pav.spline.SecantsCalculatorSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>SecantsCalculator.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.SecantsCalculator$Companion</mutatedClass><mutatedMethod>calculate</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>137</index><killingTest>com.github.sanity.pav.spline.SecantsCalculatorSpec.com.github.sanity.pav.spline.SecantsCalculatorSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>SecantsCalculator.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.SecantsCalculator$Companion</mutatedClass><mutatedMethod>calculate</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>145</index><killingTest>com.github.sanity.pav.spline.SecantsCalculatorSpec.com.github.sanity.pav.spline.SecantsCalculatorSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/spline/SecantsCalculator$Companion::calculate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Point.kt</sourceFile><mutatedClass>com.github.sanity.pav.Point</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/Point::getWeight</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Point.kt</sourceFile><mutatedClass>com.github.sanity.pav.Point</mutatedClass><mutatedMethod>getX</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest>com.github.sanity.pav.spline.SecantsCalculatorSpec.com.github.sanity.pav.spline.SecantsCalculatorSpec</killingTest><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/Point::getX</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Point.kt</sourceFile><mutatedClass>com.github.sanity.pav.Point</mutatedClass><mutatedMethod>getY</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest>com.github.sanity.pav.spline.SecantsCalculatorSpec.com.github.sanity.pav.spline.SecantsCalculatorSpec</killingTest><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/Point::getY</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Point.kt</sourceFile><mutatedClass>com.github.sanity.pav.Point</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/Point;)Lcom/github/sanity/pav/Point;</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Point.kt</sourceFile><mutatedClass>com.github.sanity.pav.Point</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/Point;)Lcom/github/sanity/pav/Point;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Point.kt</sourceFile><mutatedClass>com.github.sanity.pav.Point</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/Point;)Lcom/github/sanity/pav/Point;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Point.kt</sourceFile><mutatedClass>com.github.sanity.pav.Point</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/Point;)Lcom/github/sanity/pav/Point;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Point.kt</sourceFile><mutatedClass>com.github.sanity.pav.Point</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/Point;)Lcom/github/sanity/pav/Point;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Point.kt</sourceFile><mutatedClass>com.github.sanity.pav.Point</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/Point;)Lcom/github/sanity/pav/Point;</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Point.kt</sourceFile><mutatedClass>com.github.sanity.pav.Point</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/Point;)Lcom/github/sanity/pav/Point;</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Point.kt</sourceFile><mutatedClass>com.github.sanity.pav.Point</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/Point;)Lcom/github/sanity/pav/Point;</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Point.kt</sourceFile><mutatedClass>com.github.sanity.pav.Point</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/Point;)Lcom/github/sanity/pav/Point;</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Point.kt</sourceFile><mutatedClass>com.github.sanity.pav.Point</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/Point;)Lcom/github/sanity/pav/Point;</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>53</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/Point::merge to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Point.kt</sourceFile><mutatedClass>com.github.sanity.pav.Point</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Point.kt</sourceFile><mutatedClass>com.github.sanity.pav.Point</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/Point::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>funX</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>funX</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>funX</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>funX</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><killingTest/><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/examples/GenerateGraphKt::funX</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>55</index><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>96</index><killingTest/><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>125</index><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>115</index><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>158</index><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>125</index><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>131</index><killingTest>com.github.sanity.pav.SerializeSpec.com.github.sanity.pav.SerializeSpec</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>160</index><killingTest>com.github.sanity.pav.SerializeSpec.com.github.sanity.pav.SerializeSpec</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>121</index><killingTest>com.github.sanity.pav.SerializeSpec.com.github.sanity.pav.SerializeSpec</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>137</index><killingTest>com.github.sanity.pav.SerializeSpec.com.github.sanity.pav.SerializeSpec</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>151</index><killingTest>com.github.sanity.pav.SerializeSpec.com.github.sanity.pav.SerializeSpec</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><killingTest>com.github.sanity.pav.SerializeSpec.com.github.sanity.pav.SerializeSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><killingTest>com.github.sanity.pav.SerializeSpec.com.github.sanity.pav.SerializeSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>101</index><killingTest>com.github.sanity.pav.SerializeSpec.com.github.sanity.pav.SerializeSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>125</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>131</index><killingTest>com.github.sanity.pav.SerializeSpec.com.github.sanity.pav.SerializeSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>159</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>169</index><killingTest>com.github.sanity.pav.SerializeSpec.com.github.sanity.pav.SerializeSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/PairSubstitutingDoublyLinkedList$Companion::createFromList to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>142</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>removed call to com/github/sanity/pav/PairSubstitutingDoublyLinkedList::setNext</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>153</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>removed call to com/github/sanity/pav/PairSubstitutingDoublyLinkedList::setPrevious</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>utilities.kt</sourceFile><mutatedClass>com.github.sanity.pav.UtilitiesKt</mutatedClass><mutatedMethod>betterBinarySearch</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)Lcom/github/sanity/pav/BinarySearchResult;</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><killingTest/><description>mutated return of Object value for com/github/sanity/pav/UtilitiesKt::betterBinarySearch to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>utilities.kt</sourceFile><mutatedClass>com.github.sanity.pav.UtilitiesKt</mutatedClass><mutatedMethod>betterBinarySearch</mutatedMethod><methodDescription>([DD)Lcom/github/sanity/pav/BinarySearchResult;</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>utilities.kt</sourceFile><mutatedClass>com.github.sanity.pav.UtilitiesKt</mutatedClass><mutatedMethod>betterBinarySearch</mutatedMethod><methodDescription>([DD)Lcom/github/sanity/pav/BinarySearchResult;</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>utilities.kt</sourceFile><mutatedClass>com.github.sanity.pav.UtilitiesKt</mutatedClass><mutatedMethod>betterBinarySearch</mutatedMethod><methodDescription>([DD)Lcom/github/sanity/pav/BinarySearchResult;</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><killingTest>com.github.sanity.pav.utilitiesSpec.com.github.sanity.pav.utilitiesSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>utilities.kt</sourceFile><mutatedClass>com.github.sanity.pav.UtilitiesKt</mutatedClass><mutatedMethod>betterBinarySearch</mutatedMethod><methodDescription>([DD)Lcom/github/sanity/pav/BinarySearchResult;</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><killingTest>com.github.sanity.pav.utilitiesSpec.com.github.sanity.pav.utilitiesSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>utilities.kt</sourceFile><mutatedClass>com.github.sanity.pav.UtilitiesKt</mutatedClass><mutatedMethod>betterBinarySearch</mutatedMethod><methodDescription>([DD)Lcom/github/sanity/pav/BinarySearchResult;</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>60</index><killingTest>com.github.sanity.pav.utilitiesSpec.com.github.sanity.pav.utilitiesSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/UtilitiesKt::betterBinarySearch to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>utilities.kt</sourceFile><mutatedClass>com.github.sanity.pav.UtilitiesKt</mutatedClass><mutatedMethod>toArrayList</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><killingTest>com.github.sanity.pav.utilitiesSpec.com.github.sanity.pav.utilitiesSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>utilities.kt</sourceFile><mutatedClass>com.github.sanity.pav.UtilitiesKt</mutatedClass><mutatedMethod>toArrayList</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/ArrayList;</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><killingTest>com.github.sanity.pav.spline.SecantsCalculatorSpec.com.github.sanity.pav.spline.SecantsCalculatorSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/UtilitiesKt::toArrayList to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>utilities.kt</sourceFile><mutatedClass>com.github.sanity.pav.UtilitiesKt</mutatedClass><mutatedMethod>toBinarySearchResult</mutatedMethod><methodDescription>(I)Lcom/github/sanity/pav/BinarySearchResult;</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>utilities.kt</sourceFile><mutatedClass>com.github.sanity.pav.UtilitiesKt</mutatedClass><mutatedMethod>toBinarySearchResult</mutatedMethod><methodDescription>(I)Lcom/github/sanity/pav/BinarySearchResult;</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>18</index><killingTest>com.github.sanity.pav.utilitiesSpec.com.github.sanity.pav.utilitiesSpec</killingTest><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>utilities.kt</sourceFile><mutatedClass>com.github.sanity.pav.UtilitiesKt</mutatedClass><mutatedMethod>toBinarySearchResult</mutatedMethod><methodDescription>(I)Lcom/github/sanity/pav/BinarySearchResult;</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><killingTest>com.github.sanity.pav.utilitiesSpec.com.github.sanity.pav.utilitiesSpec</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>utilities.kt</sourceFile><mutatedClass>com.github.sanity.pav.UtilitiesKt</mutatedClass><mutatedMethod>toBinarySearchResult</mutatedMethod><methodDescription>(I)Lcom/github/sanity/pav/BinarySearchResult;</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><killingTest>com.github.sanity.pav.utilitiesSpec.com.github.sanity.pav.utilitiesSpec</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>utilities.kt</sourceFile><mutatedClass>com.github.sanity.pav.UtilitiesKt</mutatedClass><mutatedMethod>toBinarySearchResult</mutatedMethod><methodDescription>(I)Lcom/github/sanity/pav/BinarySearchResult;</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><killingTest>com.github.sanity.pav.utilitiesSpec.com.github.sanity.pav.utilitiesSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>utilities.kt</sourceFile><mutatedClass>com.github.sanity.pav.UtilitiesKt</mutatedClass><mutatedMethod>toBinarySearchResult</mutatedMethod><methodDescription>(I)Lcom/github/sanity/pav/BinarySearchResult;</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><killingTest>com.github.sanity.pav.utilitiesSpec.com.github.sanity.pav.utilitiesSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/UtilitiesKt::toBinarySearchResult to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>34</index><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>115</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>130</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/spline/MonotoneSpline::interpolate</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/spline/MonotoneSpline::interpolate</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>214</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/spline/MonotoneSpline::interpolate</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>237</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/spline/MonotoneSpline::interpolate</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList</mutatedClass><mutatedMethod>getNext</mutatedMethod><methodDescription>()Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest/><description>mutated return of Object value for com/github/sanity/pav/PairSubstitutingDoublyLinkedList::getNext to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList</mutatedClass><mutatedMethod>getPrevious</mutatedMethod><methodDescription>()Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest>com.github.sanity.pav.SerializeSpec.com.github.sanity.pav.SerializeSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/PairSubstitutingDoublyLinkedList::getPrevious to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/PairSubstitutingDoublyLinkedList::getValue to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList</mutatedClass><mutatedMethod>iterate</mutatedMethod><methodDescription>(Lkotlin/jvm/functions/Function1;)V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList</mutatedClass><mutatedMethod>iterate</mutatedMethod><methodDescription>(Lkotlin/jvm/functions/Function1;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><killingTest>com.github.sanity.pav.SerializeSpec.com.github.sanity.pav.SerializeSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList</mutatedClass><mutatedMethod>iterate</mutatedMethod><methodDescription>(Lkotlin/jvm/functions/Function1;)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><killingTest>com.github.sanity.pav.SerializeSpec.com.github.sanity.pav.SerializeSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList</mutatedClass><mutatedMethod>iterate</mutatedMethod><methodDescription>(Lkotlin/jvm/functions/Function1;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><killingTest>com.github.sanity.pav.SerializeSpec.com.github.sanity.pav.SerializeSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList</mutatedClass><mutatedMethod>toArrayList</mutatedMethod><methodDescription>()Ljava/util/ArrayList;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/PairSubstitutingDoublyLinkedList::toArrayList to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList</mutatedClass><mutatedMethod>toArrayList</mutatedMethod><methodDescription>()Ljava/util/ArrayList;</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>removed call to com/github/sanity/pav/PairSubstitutingDoublyLinkedList::iterate</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$1</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList$Cursor;)Lcom/github/sanity/pav/Point;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>46</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$1</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList$Cursor;)Lcom/github/sanity/pav/Point;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>63</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$1</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList$Cursor;)Lcom/github/sanity/pav/Point;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><killingTest>com.github.sanity.pav.SerializeSpec.com.github.sanity.pav.SerializeSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$1</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList$Cursor;)Lcom/github/sanity/pav/Point;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$1</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList$Cursor;)Lcom/github/sanity/pav/Point;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$1</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList$Cursor;)Lcom/github/sanity/pav/Point;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$1</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList$Cursor;)Lcom/github/sanity/pav/Point;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$1</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList$Cursor;)Lcom/github/sanity/pav/Point;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>96</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$1</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList$Cursor;)Lcom/github/sanity/pav/Point;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>121</index><killingTest>com.github.sanity.pav.SerializeSpec.com.github.sanity.pav.SerializeSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/PairAdjacentViolators$1::invoke to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>utilities.kt</sourceFile><mutatedClass>com.github.sanity.pav.BinarySearchResult$Between</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><killingTest>com.github.sanity.pav.utilitiesSpec.com.github.sanity.pav.utilitiesSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>utilities.kt</sourceFile><mutatedClass>com.github.sanity.pav.BinarySearchResult$Between</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><killingTest>com.github.sanity.pav.utilitiesSpec.com.github.sanity.pav.utilitiesSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>utilities.kt</sourceFile><mutatedClass>com.github.sanity.pav.BinarySearchResult$Between</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><killingTest>com.github.sanity.pav.utilitiesSpec.com.github.sanity.pav.utilitiesSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>utilities.kt</sourceFile><mutatedClass>com.github.sanity.pav.BinarySearchResult$Between</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><killingTest>com.github.sanity.pav.utilitiesSpec.com.github.sanity.pav.utilitiesSpec</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>utilities.kt</sourceFile><mutatedClass>com.github.sanity.pav.BinarySearchResult$Between</mutatedClass><mutatedMethod>getHighIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>utilities.kt</sourceFile><mutatedClass>com.github.sanity.pav.BinarySearchResult$Between</mutatedClass><mutatedMethod>getLowIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>utilities.kt</sourceFile><mutatedClass>com.github.sanity.pav.BinarySearchResult$Between</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><killingTest>com.github.sanity.pav.utilitiesSpec.com.github.sanity.pav.utilitiesSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/BinarySearchResult$Between::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>utilities.kt</sourceFile><mutatedClass>com.github.sanity.pav.BinarySearchResult$Exact</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><killingTest>com.github.sanity.pav.utilitiesSpec.com.github.sanity.pav.utilitiesSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>utilities.kt</sourceFile><mutatedClass>com.github.sanity.pav.BinarySearchResult$Exact</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><killingTest>com.github.sanity.pav.utilitiesSpec.com.github.sanity.pav.utilitiesSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>utilities.kt</sourceFile><mutatedClass>com.github.sanity.pav.BinarySearchResult$Exact</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><killingTest>com.github.sanity.pav.utilitiesSpec.com.github.sanity.pav.utilitiesSpec</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>utilities.kt</sourceFile><mutatedClass>com.github.sanity.pav.BinarySearchResult$Exact</mutatedClass><mutatedMethod>getIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>utilities.kt</sourceFile><mutatedClass>com.github.sanity.pav.BinarySearchResult$Exact</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><killingTest>com.github.sanity.pav.utilitiesSpec.com.github.sanity.pav.utilitiesSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/BinarySearchResult$Exact::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>TangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.PointWithTangents</mutatedClass><mutatedMethod>getPointWithSecants</mutatedMethod><methodDescription>()Lcom/github/sanity/pav/spline/PointWithSecants;</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest>com.github.sanity.pav.spline.FritschCarlsonTangentStrategySpec.com.github.sanity.pav.spline.FritschCarlsonTangentStrategySpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/spline/PointWithTangents::getPointWithSecants to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>TangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.PointWithTangents</mutatedClass><mutatedMethod>getTangent</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest>com.github.sanity.pav.spline.FritschCarlsonTangentStrategySpec.com.github.sanity.pav.spline.FritschCarlsonTangentStrategySpec</killingTest><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/spline/PointWithTangents::getTangent</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>TangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.PointWithTangents</mutatedClass><mutatedMethod>getX</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/spline/PointWithTangents::getX</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>TangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.PointWithTangents</mutatedClass><mutatedMethod>getY</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest>com.github.sanity.pav.spline.MonotoneSplineSpec.com.github.sanity.pav.spline.MonotoneSplineSpec</killingTest><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/spline/PointWithTangents::getY</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Iterable;Lcom/github/sanity/pav/PairAdjacentViolators$PAVMode;)V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>removed call to com/github/sanity/pav/PairSubstitutingDoublyLinkedList::iterate</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators</mutatedClass><mutatedMethod>getIsotonicPoints</mutatedMethod><methodDescription>()Ljava/util/ArrayList;</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/PairAdjacentViolators::getIsotonicPoints to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators</mutatedClass><mutatedMethod>interpolator</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairAdjacentViolators$InterpolationStrategy;)Lkotlin/jvm/functions/Function1;</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/PairAdjacentViolators::interpolator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators</mutatedClass><mutatedMethod>inverseInterpolator</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairAdjacentViolators$InterpolationStrategy;)Lkotlin/jvm/functions/Function1;</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/PairAdjacentViolators::inverseInterpolator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>TangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.Secant</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/Point;Lcom/github/sanity/pav/Point;)V</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><killingTest>com.github.sanity.pav.spline.SecantsCalculatorSpec.com.github.sanity.pav.spline.SecantsCalculatorSpec</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>TangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.Secant</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/Point;Lcom/github/sanity/pav/Point;)V</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><killingTest>com.github.sanity.pav.spline.SecantsCalculatorSpec.com.github.sanity.pav.spline.SecantsCalculatorSpec</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>TangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.Secant</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/Point;Lcom/github/sanity/pav/Point;)V</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>TangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.Secant</mutatedClass><mutatedMethod>getSlope</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest>com.github.sanity.pav.spline.FritschCarlsonTangentStrategySpec.com.github.sanity.pav.spline.FritschCarlsonTangentStrategySpec</killingTest><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/spline/Secant::getSlope</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>TangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.PointWithSecants</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>()Lcom/github/sanity/pav/Point;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest>com.github.sanity.pav.spline.SecantsCalculatorSpec.com.github.sanity.pav.spline.SecantsCalculatorSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/spline/PointWithSecants::getPoint to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>TangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.PointWithSecants</mutatedClass><mutatedMethod>getSecantAfter</mutatedMethod><methodDescription>()Lcom/github/sanity/pav/spline/Secant;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest>com.github.sanity.pav.spline.SecantsCalculatorSpec.com.github.sanity.pav.spline.SecantsCalculatorSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/spline/PointWithSecants::getSecantAfter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>TangentStrategy.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.PointWithSecants</mutatedClass><mutatedMethod>getSecantBefore</mutatedMethod><methodDescription>()Lcom/github/sanity/pav/spline/Secant;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest>com.github.sanity.pav.spline.SecantsCalculatorSpec.com.github.sanity.pav.spline.SecantsCalculatorSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/spline/PointWithSecants::getSecantBefore to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Cursor</mutatedClass><mutatedMethod>getNextValue</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><killingTest>com.github.sanity.pav.SerializeSpec.com.github.sanity.pav.SerializeSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/PairSubstitutingDoublyLinkedList$Cursor::getNextValue to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Cursor</mutatedClass><mutatedMethod>getPreviousValue</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><killingTest>com.github.sanity.pav.SerializeSpec.com.github.sanity.pav.SerializeSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Cursor</mutatedClass><mutatedMethod>getPreviousValue</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><killingTest>com.github.sanity.pav.SerializeSpec.com.github.sanity.pav.SerializeSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/PairSubstitutingDoublyLinkedList$Cursor::getPreviousValue to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$inverseInterpolator$1</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$inverseInterpolator$1</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>91</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/PairAdjacentViolators$inverseInterpolator$1::invoke</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Comparisons.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$$special$$inlined$sortedBy$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)I</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$interpolator$1</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/PairAdjacentViolators$interpolator$1::invoke</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$toArrayList$1</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList$Cursor;)Ljava/lang/Void;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><killingTest>com.github.sanity.pav.SerializeSpec.com.github.sanity.pav.SerializeSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/PairSubstitutingDoublyLinkedList$toArrayList$1::invoke to ( if (x != null) null else throw new RuntimeException )</description></mutation>
</mutations>
